#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 421136 bytes. Error detail: Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   This process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
#     placed in the first 32GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:168), pid=34064, tid=27924
#
# JRE version: OpenJDK Runtime Environment (21.0.7) (build 21.0.7+-13880790-b1038.58)
# Java VM: OpenJDK 64-Bit Server VM (21.0.7+-13880790-b1038.58, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED --add-opens=java.base/java.nio.charset=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.xml/javax.xml.namespace=ALL-UNNAMED -XX:MaxMetaspaceSize=4G -XX:ReservedCodeCacheSize=512m -XX:+HeapDumpOnOutOfMemoryError -Xmx8G -Dfile.encoding=UTF-8 -Duser.country=RU -Duser.language=ru -Duser.variant -javaagent:C:\gradle-cache\wrapper\dists\gradle-8.12-all\ejduaidbjup3bmmkhw3rie4zb\gradle-8.12\lib\agents\gradle-instrumentation-agent-8.12.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 8.12

Host: 13th Gen Intel(R) Core(TM) i7-13650HX, 20 cores, 31G,  Windows 11 , 64 bit Build 26100 (10.0.26100.5074)
Time: Fri Sep 19 13:55:53 2025  Windows 11 , 64 bit Build 26100 (10.0.26100.5074) elapsed time: 256.303837 seconds (0d 0h 4m 16s)

---------------  T H R E A D  ---------------

Current thread (0x000001a760b87090):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=27924, stack(0x0000000154800000,0x0000000154900000) (1024K)]


Current CompileTask:
C2:256304 44208   !   4       org.gradle.internal.service.DefaultServiceRegistry$FactoryService::bind (297 bytes)

Stack: [0x0000000154800000,0x0000000154900000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6d25c9]
V  [jvm.dll+0x860923]
V  [jvm.dll+0x862e7e]
V  [jvm.dll+0x863563]
V  [jvm.dll+0x27f156]
V  [jvm.dll+0xc002d]
V  [jvm.dll+0xc0563]
V  [jvm.dll+0x2f31f0]
V  [jvm.dll+0x5fc309]
V  [jvm.dll+0x250f82]
V  [jvm.dll+0x24982a]
V  [jvm.dll+0x24733e]
V  [jvm.dll+0x1c5fb4]
V  [jvm.dll+0x256bac]
V  [jvm.dll+0x2550f6]
V  [jvm.dll+0x3f1d16]
V  [jvm.dll+0x808d08]
V  [jvm.dll+0x6d0e1d]
