import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AppsFlyer Purchase Connector
/// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç IAP –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ AppsFlyer
class PurchaseConnectorService {
  static final PurchaseConnectorService _instance = PurchaseConnectorService._internal();
  factory PurchaseConnectorService() => _instance;
  PurchaseConnectorService._internal();

  static const MethodChannel _channel = MethodChannel('hydracoach.purchase_connector');

  bool _isInitialized = false;
  bool _isObserving = false;

  bool get isInitialized => _isInitialized;
  bool get isObserving => _isObserving;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Purchase Connector
  /// –î–æ–ª–∂–Ω–∞ –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AppsFlyer SDK
  Future<void> initialize() async {
    if (_isInitialized) return;

    try {
      if (kDebugMode) {
        print('üîó –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AppsFlyer Purchase Connector...');
      }

      final result = await _channel.invokeMethod('initializePurchaseConnector');

      _isInitialized = true;

      if (kDebugMode) {
        print('‚úÖ Purchase Connector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: $result');
      }
    } on PlatformException catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Purchase Connector: ${e.message}');
      }
      rethrow;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ Purchase Connector: $e');
      }
      rethrow;
    }
  }

  /// –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  /// –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AppsFlyer SDK (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –≤ 1 —Å–µ–∫—É–Ω–¥—É)
  Future<void> startObservingTransactions() async {
    if (!_isInitialized) {
      throw StateError('Purchase Connector –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initialize() —Å–Ω–∞—á–∞–ª–∞.');
    }

    if (_isObserving) {
      if (kDebugMode) {
        print('‚ö†Ô∏è Purchase Connector —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
      }
      return;
    }

    try {
      if (kDebugMode) {
        print('üîç –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π Purchase Connector...');
      }

      final result = await _channel.invokeMethod('startPurchaseConnector');

      _isObserving = true;

      if (kDebugMode) {
        print('‚úÖ Purchase Connector –Ω–∞—á–∞–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: $result');
      }
    } on PlatformException catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: ${e.message}');
      }
      rethrow;
    }
  }

  /// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  Future<void> stopObservingTransactions() async {
    if (!_isObserving) {
      if (kDebugMode) {
        print('‚ö†Ô∏è Purchase Connector –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
      }
      return;
    }

    try {
      if (kDebugMode) {
        print('üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
      }

      final result = await _channel.invokeMethod('stopPurchaseConnector');

      _isObserving = false;

      if (kDebugMode) {
        print('‚úÖ Purchase Connector –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $result');
      }
    } on PlatformException catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: ${e.message}');
      }
      rethrow;
    }
  }

  /// –ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ Purchase Connector
  /// –°–ª–µ–¥—É–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø–æ—Å–ª–µ AppsFlyer.startSDK()
  Future<void> initializeAndStart() async {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
      await initialize();

      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
      await startObservingTransactions();

      if (kDebugMode) {
        print('üéØ Purchase Connector –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Purchase Connector: $e');
      }
      rethrow;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ Purchase Connector
  Map<String, dynamic> getStatus() {
    return {
      'isInitialized': _isInitialized,
      'isObserving': _isObserving,
    };
  }
}