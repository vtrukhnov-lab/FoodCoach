import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'appsflyer_config.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MAX SDK (AppLovin).
/// –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏: Interstitial, Rewarded, Banner.
///
/// –í–ê–ñ–ù–û: –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Ç–∏–≤–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ AppLovin MAX SDK –Ω–∞ Android/iOS.
class MaxSdkService {
  static final MaxSdkService _instance = MaxSdkService._internal();
  factory MaxSdkService() => _instance;
  MaxSdkService._internal();

  static const MethodChannel _channel = MethodChannel('max_sdk');

  bool _isInitialized = false;
  MaxSdkConfig? _config;

  bool get isInitialized => _isInitialized;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MAX SDK
  Future<void> initialize() async {
    if (_isInitialized) {
      return;
    }

    _config = maxSdkConfig;

    if (!_config!.isComplete) {
      if (kDebugMode) {
        print('‚ö†Ô∏è MAX SDK –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
      }
      return;
    }

    try {
      await _channel.invokeMethod<void>('initialize', <String, dynamic>{
        'sdkKey': _config!.sdkKey,
      });

      _isInitialized = true;

      if (kDebugMode) {
        print('‚úÖ MAX SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        print('   SDK Key: ${_config!.sdkKey}');
      }
    } on MissingPluginException {
      if (kDebugMode) {
        print('‚ö†Ô∏è MAX SDK –Ω–∞—Ç–∏–≤–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        print('   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ AppLovin MAX SDK –Ω–∞ Android/iOS');
      }
    } catch (error, stackTrace) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MAX SDK: $error');
        print(stackTrace);
      }
    }
  }

  /// –ó–∞–≥—Ä—É–∑–∫–∞ Interstitial —Ä–µ–∫–ª–∞–º—ã
  Future<void> loadInterstitial() async {
    if (!_isInitialized) {
      if (kDebugMode) {
        print('‚ö†Ô∏è MAX SDK –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      return;
    }

    try {
      final adUnitId = _getInterstitialAdUnitId();
      await _channel.invokeMethod<void>('loadInterstitial', {
        'adUnitId': adUnitId,
      });

      if (kDebugMode) {
        print('üì± MAX Interstitial –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: $adUnitId');
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Interstitial: $error');
      }
    }
  }

  /// –ü–æ–∫–∞–∑ Interstitial —Ä–µ–∫–ª–∞–º—ã
  Future<bool> showInterstitial() async {
    if (!_isInitialized) {
      return false;
    }

    try {
      final result = await _channel.invokeMethod<bool>('showInterstitial');
      return result ?? false;
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Interstitial: $error');
      }
      return false;
    }
  }

  /// –ó–∞–≥—Ä—É–∑–∫–∞ Rewarded —Ä–µ–∫–ª–∞–º—ã
  Future<void> loadRewarded() async {
    if (!_isInitialized) {
      return;
    }

    try {
      final adUnitId = _getRewardedAdUnitId();
      await _channel.invokeMethod<void>('loadRewarded', {
        'adUnitId': adUnitId,
      });

      if (kDebugMode) {
        print('üí∞ MAX Rewarded –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: $adUnitId');
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Rewarded: $error');
      }
    }
  }

  /// –ü–æ–∫–∞–∑ Rewarded —Ä–µ–∫–ª–∞–º—ã
  Future<bool> showRewarded() async {
    if (!_isInitialized) {
      return false;
    }

    try {
      final result = await _channel.invokeMethod<bool>('showRewarded');
      return result ?? false;
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Rewarded: $error');
      }
      return false;
    }
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ Banner —Ä–µ–∫–ª–∞–º—ã
  Future<void> createBanner() async {
    if (!_isInitialized) {
      return;
    }

    try {
      final adUnitId = _getBannerAdUnitId();
      await _channel.invokeMethod<void>('createBanner', {
        'adUnitId': adUnitId,
      });

      if (kDebugMode) {
        print('üì∞ MAX Banner —Å–æ–∑–¥–∞–µ—Ç—Å—è: $adUnitId');
      }
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Banner: $error');
      }
    }
  }

  /// –ü–æ–∫–∞–∑ Banner —Ä–µ–∫–ª–∞–º—ã
  Future<void> showBanner() async {
    if (!_isInitialized) {
      return;
    }

    try {
      await _channel.invokeMethod<void>('showBanner');
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Banner: $error');
      }
    }
  }

  /// –°–∫—Ä—ã—Ç–∏–µ Banner —Ä–µ–∫–ª–∞–º—ã
  Future<void> hideBanner() async {
    if (!_isInitialized) {
      return;
    }

    try {
      await _channel.invokeMethod<void>('hideBanner');
    } catch (error) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–∏—è Banner: $error');
      }
    }
  }

  // ==================== –í–ù–£–¢–†–ï–ù–ù–ò–ï –ú–ï–¢–û–î–´ ====================

  String _getInterstitialAdUnitId() {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return adMobAndroidConfig.interstitialId;
      case TargetPlatform.iOS:
        return adMobIosConfig.interstitialId;
      default:
        return '';
    }
  }

  String _getRewardedAdUnitId() {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return adMobAndroidConfig.rewardedId;
      case TargetPlatform.iOS:
        return adMobIosConfig.rewardedId;
      default:
        return '';
    }
  }

  String _getBannerAdUnitId() {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return adMobAndroidConfig.bannerId;
      case TargetPlatform.iOS:
        return adMobIosConfig.bannerId;
      default:
        return '';
    }
  }
}