import 'package:flutter/foundation.dart';
import 'package:shared_preferences/shared_preferences.dart';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤ RevenueCat
class StoreProduct {
  final String identifier;
  final String title;
  final String description;
  final double price;
  final String priceString;
  
  StoreProduct({
    required this.identifier,
    required this.title,
    required this.description,
    required this.price,
    required this.priceString,
  });
}

class SubscriptionService {
  static const String proEntitlementIdentifier = 'pro';
  
  static SubscriptionService? _instance;
  static SubscriptionService get instance => _instance ??= SubscriptionService._();
  
  SubscriptionService._();
  
  bool _isInitialized = false;
  bool _isPro = false;
  
  bool get isPro => _isPro;
  bool get isInitialized => _isInitialized;
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–¥–ø–∏—Å–æ–∫ (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞)
  /// TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å AppsFlyer ROI360 –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ
  Future<void> initialize() async {
    if (_isInitialized) return;
    
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π PRO —Å—Ç–∞—Ç—É—Å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
      final prefs = await SharedPreferences.getInstance();
      _isPro = prefs.getBool('is_pro') ?? false;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
      final expiresAtStr = prefs.getString('pro_expires_at');
      if (expiresAtStr != null) {
        final expiresAt = DateTime.tryParse(expiresAtStr);
        if (expiresAt != null && expiresAt.isBefore(DateTime.now())) {
          // –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
          _isPro = false;
          await prefs.setBool('is_pro', false);
          await prefs.remove('pro_expires_at');
        }
      }
      
      _isInitialized = true;
      
      if (kDebugMode) {
        print('‚úÖ Subscription Service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–∑–∞–≥–ª—É—à–∫–∞)');
        print('üîí PRO —Å—Ç–∞—Ç—É—Å: $_isPro');
        print('‚ö†Ô∏è TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å AppsFlyer ROI360 –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫');
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Subscription Service: $e');
      }
    }
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
  Future<List<StoreProduct>> getAvailableProducts() async {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    return [
      StoreProduct(
        identifier: 'hydracoach_monthly',
        title: 'HydraCoach PRO Monthly',
        description: 'Unlimited reminders, CSV export, and more',
        price: 4.99,
        priceString: '\$4.99',
      ),
      StoreProduct(
        identifier: 'hydracoach_annual',
        title: 'HydraCoach PRO Annual',
        description: 'Save 40% with annual subscription',
        price: 35.99,
        priceString: '\$35.99',
      ),
    ];
  }
  
  /// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)
  Future<bool> purchaseSubscription(String productId) async {
    try {
      if (kDebugMode) {
        print('‚ö†Ô∏è –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞): $productId');
        print('TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å AppsFlyer ROI360');
      }
      
      // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º PRO
      _isPro = true;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences
      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool('is_pro', true);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–∞
      final expiresAt = productId.contains('annual')
          ? DateTime.now().add(const Duration(days: 365))
          : DateTime.now().add(const Duration(days: 30));
      
      await prefs.setString('pro_expires_at', expiresAt.toIso8601String());
      
      if (kDebugMode) {
        print('‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞)! PRO: $_isPro');
      }
      
      return true;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: $e');
      }
      return false;
    }
  }
  
  /// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ (–∑–∞–≥–ª—É—à–∫–∞)
  Future<bool> restorePurchases() async {
    try {
      if (kDebugMode) {
        print('‚ö†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ (–∑–∞–≥–ª—É—à–∫–∞)');
        print('TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å AppsFlyer ROI360');
      }
      
      // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
      final prefs = await SharedPreferences.getInstance();
      _isPro = prefs.getBool('is_pro') ?? false;
      
      if (kDebugMode) {
        print('üîÑ –ü–æ–∫—É–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–∑–∞–≥–ª—É—à–∫–∞)! PRO: $_isPro');
      }
      
      return _isPro;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: $e');
      }
      return false;
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PRO —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasProAccess() {
    return _isPro;
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasFeatureAccess(String featureName) {
    // FREE —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã
    const freeFeatures = {
      'basic_tracking',
      'weather_integration', 
      'simple_reminders',
      'daily_report',
      'basic_history',
      'alcohol_log',           
      'alcohol_harm_reduction', 
      'alcohol_morning_checkin',
    };
    
    if (freeFeatures.contains(featureName)) {
      return true;
    }
    
    // PRO —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –ø–æ–¥–ø–∏—Å–∫–∏
    return _isPro;
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π FREE –≤–µ—Ä—Å–∏–∏
  Map<String, dynamic> getFreeLimitations() {
    return {
      'max_daily_reminders': 4,
      'history_days': 30,
      'export_available': false,
      'smart_reminders': false,
      'fasting_aware': false,
      'cloud_sync': false,
      'weekly_reports': false,
      'alcohol_pre_drink': false,
      'alcohol_recovery_plan': false,
      'alcohol_sober_calendar': false,
    };
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ PRO –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
  Map<String, dynamic> getProFeatures() {
    return {
      'unlimited_reminders': true,
      'unlimited_history': true,
      'csv_export': true,
      'smart_reminders': true,
      'fasting_aware_mode': true,
      'cloud_sync': true,
      'weekly_reports': true,
      'contextual_reminders': true,
      'heat_protocols': true,
      'multi_device': true,
      'alcohol_pre_drink_protocol': true,
      'alcohol_recovery_plan': true,
      'alcohol_sober_calendar': true,
      'alcohol_extended_checkin': true,
    };
  }
}

/// Provider –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
class SubscriptionProvider extends ChangeNotifier {
  final SubscriptionService _subscriptionService = SubscriptionService.instance;
  
  bool get isPro => _subscriptionService.isPro;
  bool get isInitialized => _subscriptionService.isInitialized;
  
  List<StoreProduct> _availableProducts = [];
  List<StoreProduct> get availableProducts => _availableProducts;
  
  bool _isLoading = false;
  bool get isLoading => _isLoading;
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  Future<void> initialize() async {
    // –ö–†–ò–¢–ò–ß–ù–û: –ù–ï –≤—ã–∑—ã–≤–∞–µ–º notifyListeners() –≤ –Ω–∞—á–∞–ª–µ
    // —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å setState during build
    _isLoading = true;
    
    await _subscriptionService.initialize();
    await loadProducts();
    
    _isLoading = false;
    
    // –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
    // –∏—Å–ø–æ–ª—å–∑—É—è Future.microtask —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å setState during build
    await Future.microtask(() {
      notifyListeners();
    });
  }
  
  /// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  Future<void> loadProducts() async {
    try {
      _availableProducts = await _subscriptionService.getAvailableProducts();
      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–æ –≤—Ä–µ–º—è build
      if (!_isLoading) {
        notifyListeners();
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');
      }
    }
  }
  
  /// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> purchaseSubscription(String productId) async {
    _isLoading = true;
    notifyListeners();
    
    final success = await _subscriptionService.purchaseSubscription(productId);
    
    _isLoading = false;
    notifyListeners();
    
    return success;
  }
  
  /// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
  Future<bool> restorePurchases() async {
    _isLoading = true;
    notifyListeners();
    
    final success = await _subscriptionService.restorePurchases();
    
    _isLoading = false;
    notifyListeners();
    
    return success;
  }
  
  /// –ó–ê–ì–õ–£–®–ö–ê –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ PRO –≤–µ—Ä—Å–∏–∏
  /// TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å AppsFlyer ROI360
  Future<void> mockPurchase() async {
    _isLoading = true;
    notifyListeners();
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏
    await Future.delayed(const Duration(seconds: 2));
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PRO —Å—Ç–∞—Ç—É—Å
    _subscriptionService._isPro = true;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('is_pro', true);
    await prefs.setString('pro_expires_at', 
      DateTime.now().add(const Duration(days: 365)).toIso8601String()); // –ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    
    _isLoading = false;
    notifyListeners();
    
    if (kDebugMode) {
      print('‚úÖ Mock purchase completed - PRO activated');
      print('‚ö†Ô∏è TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å AppsFlyer ROI360 –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫');
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasFeatureAccess(String featureName) {
    return _subscriptionService.hasFeatureAccess(featureName);
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
  Map<String, dynamic> getFreeLimitations() {
    return _subscriptionService.getFreeLimitations();
  }
  
  Map<String, dynamic> getProFeatures() {
    return _subscriptionService.getProFeatures();
  }
}