import 'package:flutter/foundation.dart';
import 'package:purchases_flutter/purchases_flutter.dart';
import 'package:shared_preferences/shared_preferences.dart';

class SubscriptionService {
  static const String _apiKey = 'YOUR_REVENUECAT_API_KEY'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
  static const String proEntitlementIdentifier = 'pro';
  
  static SubscriptionService? _instance;
  static SubscriptionService get instance => _instance ??= SubscriptionService._();
  
  SubscriptionService._();
  
  bool _isInitialized = false;
  bool _isPro = false;
  
  bool get isPro => _isPro;
  bool get isInitialized => _isInitialized;
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RevenueCat
  Future<void> initialize() async {
    if (_isInitialized) return;
    
    try {
      await Purchases.setLogLevel(kDebugMode ? LogLevel.debug : LogLevel.error);
      
      // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º RevenueCat
      final configuration = PurchasesConfiguration(_apiKey);
      await Purchases.configure(configuration);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
      await _checkSubscriptionStatus();
      
      _isInitialized = true;
      
      if (kDebugMode) {
        print('‚úÖ RevenueCat –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        print('üîí PRO —Å—Ç–∞—Ç—É—Å: $_isPro');
      }
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RevenueCat: $e');
      }
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<void> _checkSubscriptionStatus() async {
    try {
      final customerInfo = await Purchases.getCustomerInfo();
      _isPro = customerInfo.entitlements.active[proEntitlementIdentifier] != null;
      
      if (kDebugMode) {
        print('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $_isPro');
        print('üìÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: ${customerInfo.entitlements.active.keys.toList()}');
      }
    } catch (e) {
      _isPro = false;
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: $e');
      }
    }
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  Future<List<StoreProduct>> getAvailableProducts() async {
    try {
      final offerings = await Purchases.getOfferings();
      final currentOffering = offerings.current;
      
      if (currentOffering != null) {
        final availablePackages = currentOffering.availablePackages;
        return availablePackages.map((package) => package.storeProduct).toList();
      }
      
      return [];
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');
      }
      return [];
    }
  }
  
  /// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> purchaseSubscription(String productId) async {
    try {
      final offerings = await Purchases.getOfferings();
      final currentOffering = offerings.current;
      
      if (currentOffering != null) {
        // –ò—â–µ–º –Ω—É–∂–Ω—ã–π –ø–∞–∫–µ—Ç
        final package = currentOffering.availablePackages.firstWhere(
          (package) => package.storeProduct.identifier == productId,
          orElse: () => throw Exception('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'),
        );
        
        final result = await Purchases.purchasePackage(package);
        _isPro = result.customerInfo.entitlements.active[proEntitlementIdentifier] != null;
        
        if (kDebugMode) {
          print('‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞! PRO: $_isPro');
        }
        
        return _isPro;
      }
      
      return false;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: $e');
      }
      return false;
    }
  }
  
  /// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
  Future<bool> restorePurchases() async {
    try {
      final customerInfo = await Purchases.restorePurchases();
      _isPro = customerInfo.entitlements.active[proEntitlementIdentifier] != null;
      
      if (kDebugMode) {
        print('üîÑ –ü–æ–∫—É–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! PRO: $_isPro');
      }
      
      return _isPro;
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: $e');
      }
      return false;
    }
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ
  Future<CustomerInfo?> getCustomerInfo() async {
    try {
      return await Purchases.getCustomerInfo();
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ: $e');
      }
      return null;
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PRO —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasProAccess() {
    return _isPro;
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasFeatureAccess(String featureName) {
    // FREE —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã
    const freeFeatures = {
      'basic_tracking',
      'weather_integration', 
      'simple_reminders',
      'daily_report',
      'basic_history',
      'alcohol_log',           // –ù–û–í–û–ï: –±–∞–∑–æ–≤—ã–π –ª–æ–≥ –∞–ª–∫–æ–≥–æ–ª—è
      'alcohol_harm_reduction', // –ù–û–í–û–ï: –∫–∞—Ä—Ç–æ—á–∫–∞ –º–∏–Ω–∏–º—É–º –≤—Ä–µ–¥–∞
      'alcohol_morning_checkin', // –ù–û–í–û–ï: —É—Ç—Ä–µ–Ω–Ω–∏–π —á–µ–∫-–∏–Ω
    };
    
    if (freeFeatures.contains(featureName)) {
      return true;
    }
    
    // PRO —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –ø–æ–¥–ø–∏—Å–∫–∏
    return _isPro;
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π FREE –≤–µ—Ä—Å–∏–∏
  Map<String, dynamic> getFreeLimitations() {
    return {
      'max_daily_reminders': 4,
      'history_days': 30,
      'export_available': false,
      'smart_reminders': false,
      'fasting_aware': false,
      'cloud_sync': false,
      'weekly_reports': false,
      'alcohol_pre_drink': false,    // –ù–û–í–û–ï
      'alcohol_recovery_plan': false, // –ù–û–í–û–ï
      'alcohol_sober_calendar': false, // –ù–û–í–û–ï
    };
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ PRO –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
  Map<String, dynamic> getProFeatures() {
    return {
      'unlimited_reminders': true,
      'unlimited_history': true,
      'csv_export': true,
      'smart_reminders': true,
      'fasting_aware_mode': true,
      'cloud_sync': true,
      'weekly_reports': true,
      'contextual_reminders': true,
      'heat_protocols': true,
      'multi_device': true,
      'alcohol_pre_drink_protocol': true,    // –ù–û–í–û–ï
      'alcohol_recovery_plan': true,         // –ù–û–í–û–ï
      'alcohol_sober_calendar': true,        // –ù–û–í–û–ï
      'alcohol_extended_checkin': true,      // –ù–û–í–û–ï
    };
  }
}

/// Provider –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
class SubscriptionProvider extends ChangeNotifier {
  final SubscriptionService _subscriptionService = SubscriptionService.instance;
  
  bool get isPro => _subscriptionService.isPro;
  bool get isInitialized => _subscriptionService.isInitialized;
  
  List<StoreProduct> _availableProducts = [];
  List<StoreProduct> get availableProducts => _availableProducts;
  
  bool _isLoading = false;
  bool get isLoading => _isLoading;
  
  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  Future<void> initialize() async {
    _isLoading = true;
    notifyListeners();
    
    await _subscriptionService.initialize();
    await loadProducts();
    
    _isLoading = false;
    notifyListeners();
  }
  
  /// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  Future<void> loadProducts() async {
    try {
      _availableProducts = await _subscriptionService.getAvailableProducts();
      notifyListeners();
    } catch (e) {
      if (kDebugMode) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e');
      }
    }
  }
  
  /// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  Future<bool> purchaseSubscription(String productId) async {
    _isLoading = true;
    notifyListeners();
    
    final success = await _subscriptionService.purchaseSubscription(productId);
    
    _isLoading = false;
    notifyListeners();
    
    return success;
  }
  
  /// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫
  Future<bool> restorePurchases() async {
    _isLoading = true;
    notifyListeners();
    
    final success = await _subscriptionService.restorePurchases();
    
    _isLoading = false;
    notifyListeners();
    
    return success;
  }
  
  /// –ó–ê–ì–õ–£–®–ö–ê –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ PRO –≤–µ—Ä—Å–∏–∏
  /// –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ RevenueCat
  Future<void> mockPurchase() async {
    _isLoading = true;
    notifyListeners();
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏
    await Future.delayed(const Duration(seconds: 2));
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PRO —Å—Ç–∞—Ç—É—Å
    _subscriptionService._isPro = true;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ SharedPreferences –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('is_pro', true);
    await prefs.setString('pro_expires_at', 
      DateTime.now().add(const Duration(days: 365)).toIso8601String()); // –ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    
    _isLoading = false;
    notifyListeners();
    
    if (kDebugMode) {
      print('‚úÖ Mock purchase completed - PRO activated');
      print('üéØ –ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ PRO —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã:');
      print('   - Pre-drink –ø—Ä–æ—Ç–æ–∫–æ–ª');
      print('   - Recovery –ø–ª–∞–Ω –Ω–∞ 6-12 —á–∞—Å–æ–≤');
      print('   - –¢—Ä–µ–∑–≤—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
      print('   - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —É—Ç—Ä–µ–Ω–Ω–∏–π —á–µ–∫-–∏–Ω');
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏
  bool hasFeatureAccess(String featureName) {
    return _subscriptionService.hasFeatureAccess(featureName);
  }
  
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
  Map<String, dynamic> getFreeLimitations() {
    return _subscriptionService.getFreeLimitations();
  }
  
  Map<String, dynamic> getProFeatures() {
    return _subscriptionService.getProFeatures();
  }
}